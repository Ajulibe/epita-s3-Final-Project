# ----------------NOTE---------------
#this server could be run locally as well as aws lambda
#TO DEPLOY TO AWS Lambda,
# use the commands below
# sam build     // for compiling the java code
# sam deploy --guided  // creating a cloud formation template and pushing to AWS
# NOTE: We are using the SAM CLI which. Any name we put in the CLI becomes the name
# of the API Gateway function.
# JDBC properties
#local postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/movie_db?useSSL=false&serverTimezone=UTC
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#For the production database connection
spring.datasource.url=jdbc:postgresql://kandula.db.elephantsql.com/truuudey
spring.datasource.password=fNS6tmVpfMc0Rbg6EWzNtdOqVu3n46Af
spring.datasource.username=truuudey
#see the template.yaml file
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#LOGGING SQL TO THE CONSOLE
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#FLYWAY SETTINGS
spring.flyway.locations=classpath:db/migration
flyway.url=jdbc:postgresql://localhost:5432
flyway.user=postgres
flyway.password=postgres
flyway.schema=movie_db
#to prevent migration from running everytime
spring.flyway.enabled=false
#automatically create bew migration and repair old ones on start up
spring.flyway.repair-missing-migrations=true
spring.flyway.baselineOnMigrate=true
#setting up the logger
logging.level.root=WARN
logging.level.com.ajulibe=TRACE
#color-coding the logs
spring.output.ansi.enabled=ALWAYS
#writing logs to files
logging.file.name=springhow.log
#environment variables
ajulibe.app.jwtSecret=f4EZw9lnJ9P8EusfIWzRMbPKtJOcsGj/Yrmm6tsr6Vg=
ajulibe.app.jwtExpirationMs=200000
#if a server is already running and yours cant stop
#~ via ? v16.13.0
#USE THE COMMAND BELOW TO SEE THE PROCESS USING THIS PORT
#? sudo lsof -n -i :8080 | grep LISTEN
#java    25651 akachukwuajulibe  105u  IPv6 0xf2f5941e4ab2b91d      0t0  TCP *:http-alt (LISTEN)
##USE THE COMMAND BELOW TO FORCE KILL THE PROCESS
#kill -9 25651
#NOTE: 25651 is the process ID
okta.oauth2.client-id=0oa8ca5qzisr1TtZ75d7
okta.oauth2.issuer=https://dev-21459342.okta.com/oauth2/default


